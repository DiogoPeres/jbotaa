--controllers2
	classname=evolutionaryrobotics.neuralnetworks.NeuralNetworkController,
	network=(
		classname=evolutionaryrobotics.neuralnetworks.CTRNNMultilayer,
		hiddennodes=10,
		outputs=(
			TwoWheelNNOutput=(
				classname=evolutionaryrobotics.neuralnetworks.outputs.TwoWheelNNOutput,
				id=1
			),
			PreyPickerNNOutput=(
				classname=evolutionaryrobotics.neuralnetworks.outputs.PreyPickerNNOutput,
				id=2
			)
		),
		inputs=(
			SimplePreyNNInput=(
				classname=evolutionaryrobotics.neuralnetworks.inputs.SimplePreyNNInput,
				id=1
			),
			SpecificNestNNInput=(
				classname=inputs.SpecificNestNNInput,
				id=2
			),
			PreyCarriedNNInput=(
				classname=evolutionaryrobotics.neuralnetworks.inputs.PreyCarriedNNInput,
				id=3
			),
			WallRayNNInput=(
				classname=evolutionaryrobotics.neuralnetworks.inputs.WallRayNNInput,
				id=4
			),
			RobotRGBColorNNInput=(
				classname=evolutionaryrobotics.neuralnetworks.inputs.RobotRGBColorNNInput,
				id=5
			)
		),
		robotconfigid=1
	)
--executor
	classname=taskexecutor.ParallelTaskExecutor
--controllers
	classname=evolutionaryrobotics.neuralnetworks.NeuralNetworkController,
	network=(
		classname=evolutionaryrobotics.neuralnetworks.CTRNNMultilayer,
		hiddennodes=10,
		outputs=(
			TwoWheelNNOutput=(
				classname=evolutionaryrobotics.neuralnetworks.outputs.TwoWheelNNOutput,
				id=1
			),
			PreyPickerNNOutput=(
				classname=evolutionaryrobotics.neuralnetworks.outputs.PreyPickerNNOutput,
				id=2
			)
		),
		inputs=(
			SimplePreyNNInput=(
				classname=evolutionaryrobotics.neuralnetworks.inputs.SimplePreyNNInput,
				id=1
			),
			SpecificNestNNInput=(
				classname=inputs.SpecificNestNNInput,
				id=2
			),
			PreyCarriedNNInput=(
				classname=evolutionaryrobotics.neuralnetworks.inputs.PreyCarriedNNInput,
				id=3
			),
			WallRayNNInput=(
				classname=evolutionaryrobotics.neuralnetworks.inputs.WallRayNNInput,
				id=4
			),
			RobotRGBColorNNInput=(
				classname=evolutionaryrobotics.neuralnetworks.inputs.RobotRGBColorNNInput,
				id=5
			)
		),
		robotconfigid=1
	)
--robots
	classname=simulation.robot.DifferentialDriveRobot,
	x=0.5,
	y=.5,
	description=teama,
	radius=.05,
	color=red,
	numberofrobots=2,
	sensors=(
		SimplePreySensor=(
			classname=simulation.robot.sensors.SimplePreySensor,
			id=1,
			numbersensors=4,
			orientation=0,
			angle=90,
			range=2
		),
		SpecificNestSensor=(
			classname=sensors.SpecificNestSensor,
			id=2,
			numbersensors=4,
			orientation=0,
			angle=90,
			range=3,
			specificnest=a
		),
		PreyCarriedSensor=(
			classname=simulation.robot.sensors.PreyCarriedSensor,
			id=3
		),
		WallRaySensor=(
			classname=simulation.robot.sensors.WallRaySensor,
			id=4,
			angle=70,
			numbersensors=4,
			range=0.5
		),
		RobotRGBColorSensor=(
			classname=simulation.robot.sensors.RobotRGBColorSensor,
			id=5,
			angle=90,
			numbersensors=4,
			range=3,
			mode=rb
		),
		
	),
	actuators=(
		TwoWheelActuator=(
			classname=simulation.robot.actuators.TwoWheelActuator,
			id=1,
			maxspeed=0.1
		),
		PreyPickerActuator=(
			classname=simulation.robot.actuators.PreyPickerActuator,
			id=2,
			maxpickdistance=0.1
		)
	)
--robots2
	classname=simulation.robot.DifferentialDriveRobot,
	x=0.1,
	y=0,
	description=teamb,
	radius=.05,
	color=blue,
	numberofrobots=2,
	sensors=(
		SimplePreySensor=(
			classname=simulation.robot.sensors.SimplePreySensor,
			id=1,
			numbersensors=4,
			orientation=0,
			angle=90,
			range=2
		),
		SpecificNestSensor=(
			classname=sensors.SpecificNestSensor,
			id=2,
			numbersensors=4,
			orientation=0,
			angle=90,
			range=3,
			specificnest=b
		),
		PreyCarriedSensor=(
			classname=simulation.robot.sensors.PreyCarriedSensor,
			id=3
		),
		WallRaySensor=(
			classname=simulation.robot.sensors.WallRaySensor,
			id=4,
			angle=70,
			range=0.5,
			numbersensors=4
		),
		RobotRGBColorSensor=(
			classname=simulation.robot.sensors.RobotRGBColorSensor,
			id=5,
			angle=90,
			numbersensors=4,
			range=3,
			mode=rb
		),
		
	),
	actuators=(
		TwoWheelActuator=(
			classname=simulation.robot.actuators.TwoWheelActuator,
			id=1,
			maxspeed=0.1
		),
		PreyPickerActuator=(
			classname=simulation.robot.actuators.PreyPickerActuator,
			id=2,
			maxpickdistance=0.1
		)
	)
--environment
	classname=environment.CoEvolutionForageEnvironment,
	nestlimit=0.25,
	foragelimit=1.5,
	forbiddenarea=4,
	steps=100,
	densityofpreys=0.25,
	width=3,
	height=3,
	startinnest=1
--evaluationb
	classname=evaluationfunctions.PreyCatchCoEvaluationFunction,
	team=b
--evaluationa
	classname=evaluationfunctions.PreyCatchCoEvaluationFunction,
	team=a
--random-seed
	1
--evolution
	classname=evolutionaryrobotics.evolution.CoEvolution,
	tablesize=10
--output
	conillonCoEvo
--population loada=conillonCoEvo/populations/apopulation1,loadb=conillonCoEvo/populations/bpopulation1,showbestCoevolved
--random-seed 850491352
